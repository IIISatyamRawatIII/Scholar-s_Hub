{"ast":null,"code":"var _jsxFileName = \"/home/rocketsingh/Desktop/final/src/components/Charts.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport ReactApexChart from 'react-apexcharts';\nimport { useState } from 'react';\nimport pic from \"./files.jpg\";\nimport \"./Charts.css\";\nimport Bargraph from './Bargraph';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Charts() {\n  _s();\n\n  const [checker, setChecker] = useState(false);\n  const [city, setCity] = useState(null);\n  const [month, setMonth] = useState(null);\n  const [od, setOd] = useState(null);\n  const [oid, setOid] = useState(null);\n  const [pe, setPe] = useState(null);\n  const [prod, setProd] = useState(null);\n  const [pa, setPa] = useState(null);\n  const [qo, setQo] = useState(null);\n  const [sales, setSales] = useState(null);\n  const [type1, settype1] = useState('scatter');\n  const [buttontype, setButtontype] = useState('0');\n  let series = [{\n    name: 'Order ID',\n    data: oid\n  }, {\n    name: 'Product',\n    data: prod\n  }, {\n    name: 'Quantity Ordered',\n    data: qo\n  }, {\n    name: 'Price Each',\n    data: pe\n  }, {\n    name: 'Ordered Data',\n    data: od\n  }, {\n    name: 'Purchase Address',\n    data: pa\n  }, {\n    name: 'Month',\n    data: month\n  }, {\n    name: 'City',\n    data: city\n  }, {\n    name: 'Sales',\n    data: sales\n  }];\n  let options = {\n    chart: {\n      height: 350,\n      zoom: {\n        enabled: false\n      }\n    },\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'straight'\n    },\n    title: {\n      text: 'Product Trends by Month',\n      align: 'left'\n    },\n    grid: {\n      row: {\n        colors: ['#f3f3f3', 'transparent'],\n        // takes an array which will be repeated on columns\n        opacity: 0.5\n      }\n    },\n    xaxis: {\n      categories: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23]\n    }\n  };\n\n  function upload(e) {\n    e.preventDefault();\n    const files = e.target.files;\n    const endpoint = \"http://127.0.0.1:8000/domain_visualizations/sales\";\n    const formData = new FormData();\n    formData.append(\"userInput\", 'satyam');\n    formData.append('upfiles', files[0]);\n    fetch(endpoint, {\n      method: 'POST',\n      body: formData\n    }).then(response => response.json()).then(data => {\n      console.log(Object.values(data.results['hours sales']));\n      setCity(Object.values(data.results['hours sales'].City));\n      setMonth(Object.values(data.results['hours sales'].Month));\n      setOd(Object.values(data.results['hours sales'].Product));\n      setOid(Object.values(data.results['hours sales'].Product));\n      setPe(Object.values(data.results['hours sales'].Product));\n      setProd(Object.values(data.results['hours sales'].Product));\n      setPa(Object.values(data.results['hours sales'].Product));\n      setQo(Object.values(data.results['hours sales'].Product));\n      setSales(Object.values(data.results['hours sales'].Sales));\n      setChecker(true);\n    }).catch(error => {\n      console.error(\"Error: \", error);\n    });\n  }\n\n  function buttonpress() {\n    console.log(\"here too bitch\");\n    if (buttontype == '0') return /*#__PURE__*/_jsxDEV(Bargraph, {\n      city: city,\n      month: month,\n      od: od,\n      oid: oid,\n      pe: pe,\n      prod: prod,\n      pa: pa,\n      qo: qo,\n      sales: sales\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 16\n    }, this);\n  }\n\n  function handelbar() {\n    setButtontype('0');\n  }\n\n  function handelpie() {\n    setButtontype('1');\n  }\n\n  function handeldonut() {\n    setButtontype('2');\n  }\n\n  function handelline() {\n    setButtontype('3');\n  }\n\n  function handelscatter() {\n    setButtontype('4');\n  }\n\n  if (checker == false) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        align: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: pic,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => upload(e),\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Click on the choose file button to upload file (s)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: e => upload(e),\n            name: \"upfiles\",\n            multiple: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 9\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app_body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bar\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handelbar,\n              children: \"Bar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pie\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handelbar,\n              children: \"Pie\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"donut\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handelbar,\n              children: \"Donut\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"line\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handelline,\n              children: \"Line\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dots\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handelscatter,\n              children: \"Scatter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart\",\n          children: buttonpress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }, this);\n  }\n}\n\n_s(Charts, \"JR/UqQDMKCtiHeANWm1LT61QT5E=\");\n\n_c = Charts;\nexport default Charts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Charts\");","map":{"version":3,"sources":["/home/rocketsingh/Desktop/final/src/components/Charts.js"],"names":["React","ReactApexChart","useState","pic","Bargraph","Charts","checker","setChecker","city","setCity","month","setMonth","od","setOd","oid","setOid","pe","setPe","prod","setProd","pa","setPa","qo","setQo","sales","setSales","type1","settype1","buttontype","setButtontype","series","name","data","options","chart","height","zoom","enabled","dataLabels","stroke","curve","title","text","align","grid","row","colors","opacity","xaxis","categories","upload","e","preventDefault","files","target","endpoint","formData","FormData","append","fetch","method","body","then","response","json","console","log","Object","values","results","City","Month","Product","Sales","catch","error","buttonpress","handelbar","handelpie","handeldonut","handelline","handelscatter"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ReactApexChart from 'react-apexcharts'\nimport { useState } from 'react';\nimport pic from \"./files.jpg\";\nimport \"./Charts.css\";\nimport Bargraph from './Bargraph';\n\nfunction Charts() {\n    const [checker, setChecker] = useState(false)\n    const [city, setCity] = useState(null)\n    const [month, setMonth] = useState(null)\n    const [od, setOd] = useState(null)\n    const [oid, setOid] = useState(null)\n    const [pe, setPe] = useState(null)\n    const [prod, setProd] = useState(null)\n    const [pa, setPa] = useState(null)\n    const [qo, setQo] = useState(null)\n    const [sales, setSales] = useState(null)\n    const [type1, settype1] = useState('scatter')\n    const [buttontype, setButtontype] = useState('0')\n  \n    let series= [{\n      name: 'Order ID',\n      data: oid\n    }, {\n      name: 'Product',\n      data: prod\n    }, {\n      name: 'Quantity Ordered',\n      data: qo\n    },\n    {\n      name: 'Price Each',\n      data: pe\n    },\n    {\n      name: 'Ordered Data',\n      data: od\n    },\n    {\n      name: 'Purchase Address',\n      data: pa\n    },\n    {\n      name: 'Month',\n      data: month\n    },\n    {\n      name: 'City',\n      data: city\n    },\n    {\n      name: 'Sales',\n      data: sales\n    },\n    ]\n    let options= {\n    chart: {\n      height: 350,\n      zoom: {\n        enabled: false\n      }\n    },\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'straight'\n    },\n    title: {\n      text: 'Product Trends by Month',\n      align: 'left'\n    },\n    grid: {\n      row: {\n        colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns\n        opacity: 0.5\n      },\n    },\n    xaxis: {\n      categories: [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23],\n    }\n  }\n  \n  function upload(e){\n  \n          e.preventDefault();\n          const files = e.target.files\n          const endpoint = \"http://127.0.0.1:8000/domain_visualizations/sales\";        \n          const formData = new FormData();\n          formData.append(\"userInput\", 'satyam');\n          formData.append('upfiles', files[0]);\n  \n          fetch(endpoint, {\n              method: 'POST',\n              body: formData,\n              }\n          ).then(response => response.json())\n          .then(data => {\n                  console.log(Object.values(data.results['hours sales']));\n                  setCity(Object.values(data.results['hours sales'].City))\n                  setMonth(Object.values(data.results['hours sales'].Month))\n                  setOd(Object.values(data.results['hours sales'].Product))\n                  setOid(Object.values(data.results['hours sales'].Product))\n                  setPe(Object.values(data.results['hours sales'].Product))\n                  setProd(Object.values(data.results['hours sales'].Product))\n                  setPa(Object.values(data.results['hours sales'].Product))\n                  setQo(Object.values(data.results['hours sales'].Product))\n                  setSales(Object.values(data.results['hours sales'].Sales))\n                  setChecker(true);\n              }\n          )\n          .catch(error => {\n                  console.error(\"Error: \", error);\n              }\n          );\n      }\n  function buttonpress(){\n    console.log(\"here too bitch\");\n      if(buttontype=='0')\n        return <Bargraph city={city} month={month} od={od} oid={oid} pe={pe} prod={prod} pa={pa} qo={qo} sales={sales}/>;\n      \n  }\n\n  function handelbar(){\n    setButtontype('0');\n  }\n  function handelpie(){\n    setButtontype('1');\n  }\n  function handeldonut(){\n    setButtontype('2');\n  }\n  function handelline(){\n    setButtontype('3');\n  }\n  function handelscatter(){\n    setButtontype('4');\n  }\n  \n    if(checker==false)\n    {\n      return(\n      <div>\n        <div align=\"center\">\n           <img src={pic} alt=\"\"/>\n        <form onSubmit={(e) => upload(e)}>\n          <h1>Click on the choose file button to upload file (s)</h1>\n          <input type=\"file\" onChange={(e) => upload(e)} name=\"upfiles\" multiple/>\n        </form> </div>\n      </div>\n      )\n    }  \n    else{\n  \n      return (\n        <div className=\"App\">\n            <div className=\"app_body\">\n              <div className=\"buttons\">\n                <div className=\"bar\">\n                    <button onClick={handelbar}>Bar</button>\n                </div>\n                <div className=\"pie\">\n                    <button onClick={handelbar}>Pie</button>\n                </div>\n                <div className=\"donut\">\n                    <button onClick={handelbar}>Donut</button>\n                </div>\n                <div className=\"line\">\n                    <button onClick={handelline}>Line</button>\n                </div>\n                <div className=\"dots\">\n                    <button onClick={handelscatter}>Scatter</button>\n                </div>\n              </div>\n              <div className=\"chart\">\n                {buttonpress}         \n              </div>\n            </div>\n        </div>\n      );\n    }\n}\n\nexport default Charts\n"]},"metadata":{},"sourceType":"module"}