{"ast":null,"code":"var _jsxFileName = \"/home/rocketsingh/Desktop/final/src/components/Bargraph.js\";\nimport React from 'react';\nimport ReactApexChart from 'react-apexcharts';\nimport { useState } from 'react';\nimport pic from \"./files.jpg\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Bargraph(props) {\n  let series = [{\n    name: 'Order ID',\n    data: props.city\n  }, {\n    name: 'Product',\n    data: props.prod\n  }, {\n    name: 'Quantity Ordered',\n    data: props.qo\n  }, {\n    name: 'Price Each',\n    data: props.pe\n  }, {\n    name: 'Ordered Data',\n    data: props.od\n  }, {\n    name: 'Purchase Address',\n    data: props.pa\n  }, {\n    name: 'Month',\n    data: props.month\n  }, {\n    name: 'City',\n    data: props.city\n  }, {\n    name: 'Sales',\n    data: props.sales\n  }];\n  let options = {\n    chart: {\n      height: 350,\n      zoom: {\n        enabled: false\n      }\n    },\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'straight'\n    },\n    title: {\n      align: 'left'\n    },\n    grid: {\n      row: {\n        colors: ['#f3f3f3', 'transparent'],\n        // takes an array which will be repeated on columns\n        opacity: 0.5\n      }\n    },\n    xaxis: {\n      categories: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23]\n    }\n  };\n\n  function handelbar() {}\n\n  function handelpie() {}\n\n  function handeldonut() {}\n\n  function handelline() {}\n\n  function handelscatter() {}\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(ReactApexChart, {\n      options: options,\n      series: series,\n      type: 'bar',\n      height: 650\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Bargraph;\nexport default Bargraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"Bargraph\");","map":{"version":3,"sources":["/home/rocketsingh/Desktop/final/src/components/Bargraph.js"],"names":["React","ReactApexChart","useState","pic","Link","Bargraph","props","series","name","data","city","prod","qo","pe","od","pa","month","sales","options","chart","height","zoom","enabled","dataLabels","stroke","curve","title","align","grid","row","colors","opacity","xaxis","categories","handelbar","handelpie","handeldonut","handelline","handelscatter"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ReactApexChart from 'react-apexcharts'\nimport { useState } from 'react';\nimport pic from \"./files.jpg\";\nimport {Link} from \"react-router-dom\"\n\nfunction Bargraph(props) {\n    let series= [{\n      name: 'Order ID',\n      data: props.city\n    }, {\n      name: 'Product',\n      data: props.prod\n    }, {\n      name: 'Quantity Ordered',\n      data: props.qo\n    },\n    {\n      name: 'Price Each',\n      data: props.pe\n    },\n    {\n      name: 'Ordered Data',\n      data: props.od\n    },\n    {\n      name: 'Purchase Address',\n      data: props.pa\n    },\n    {\n      name: 'Month',\n      data: props.month\n    },\n    {\n      name: 'City',\n      data: props.city\n    },\n    {\n      name: 'Sales',\n      data: props.sales\n    },\n    ]\n    let options= {\n    chart: {\n      height: 350,\n      zoom: {\n        enabled: false\n      }\n    },\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'straight'\n    },\n    title: {\n      align: 'left'\n    },\n    grid: {\n      row: {\n        colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns\n        opacity: 0.5\n      },\n    },\n    xaxis: {\n      categories: [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23],\n    }\n  }\n  \n  \n  \n  function handelbar(){\n    \n  }\n  function handelpie(){\n    \n  }\n  function handeldonut(){\n    \n  }\n  function handelline(){\n    \n  }\n  function handelscatter(){\n    \n  }\n      return (\n        <div className=\"App\">\n            <ReactApexChart options={options} series={series} type={'bar'} height={650} />          \n        </div>\n      )\n      }\n\nexport default Bargraph"]},"metadata":{},"sourceType":"module"}